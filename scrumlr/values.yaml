# Default values for scrumlr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount:
  backend: 1
  frontend: 1

image:
  backend:
    repository: ghcr.io/inovex/scrumlr.io/scrumlr-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  frontend:
    repository: ghcr.io/inovex/scrumlr.io/scrumlr-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  backend: {}
  frontend: {}
podLabels:
  backend: {}
  frontend: {}

podSecurityContext:
  backend: {}
    # fsGroup: 2000
  frontend: {}
    # fsGroup: 2000

securityContext:
  backend: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  frontend: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

service:
  backend:
    type: ClusterIP
    port: 8080
  frontend:
    type: ClusterIP
    port: 8080

ingress:
  backend:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "staging"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "https://api.scrumlr.beta.tibeer.de, http://api.scrumlr.beta.tibeer.de, https://scrumlr.beta.tibeer.de, http://scrumlr.beta.tibeer.de, https://localhost:8080, http://localhost:8080"
      nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
      nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin"
    hosts:
      - host: api.scrumlr.beta.tibeer.de
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: scrumlr-backend-tls
        hosts:
          - api.scrumlr.beta.tibeer.de
  frontend:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "staging"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "https://api.scrumlr.beta.tibeer.de, http://api.scrumlr.beta.tibeer.de, https://scrumlr.beta.tibeer.de, http://scrumlr.beta.tibeer.de, https://localhost:8080, http://localhost:8080"
      nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
      nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin"
    hosts:
      - host: scrumlr.beta.tibeer.de
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: scrumlr-frontend-tls
        hosts:
          - scrumlr.beta.tibeer.de

resources:
  backend: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  frontend: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

livenessProbe:
  backend: null
#    httpGet:
#      path: /api
#      port: backend
  frontend:
    httpGet:
      path: /
      port: frontend
readinessProbe:
  backend: null
#    httpGet:
#      path: /api
#      port: backend
  frontend:
    httpGet:
      path: /
      port: frontend

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  backend: []
#   - name: foo
#     secret:
#       secretName: mysecret
#       optional: false
  frontend: []
#   - name: foo
#     secret:
#       secretName: mysecret
#       optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  backend: []
#   - name: foo
#     mountPath: "/etc/foo"
#     readOnly: true
  frontend: []
#   - name: foo
#     mountPath: "/etc/foo"
#     readOnly: true

nodeSelector:
  backend: {}
  frontend: {}

tolerations:
  backend: []
  frontend: []

affinity:
  backend: {}
  frontend: {}

command:
  backend: []
  frontend: []

args:
  backend:
    - "/app/main"
    - "-disable-check-origin"
  frontend: []

env:
  backend:
    SCRUMLR_BASE_PATH: /api
    SCRUMLR_INSECURE: "true"
    # needed in ES512 (ecdsa), openssl ecparam -name secp256k1 -genkey -noout
    #SCRUMLR_UNSAFE_PRIVATE_KEY: |
    #  -----BEGIN EC PRIVATE KEY-----
    #  MHQCAQEEIGf+QQNvrwiia1NCfU8v2rD6kcTHxA4+nv61PSI7mDYhoAcGBSuBBAAK
    #  oUQDQgAEeo5uyeOKGjNBHNft3xBMsiX8oqZBJM3qBArmIm3ZlhY58ESgOxAaXBuc
    #  nDRONCknqkJM/gWEgbkH4K0JVSnulw==
    #  -----END EC PRIVATE KEY-----
    # needed in ES512 (ecdsa), openssl ecparam -name secp256k1 -genkey -noout
    SCRUMLR_UNSAFE_PRIVATE_KEY: "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAArAAAABNlY2RzYS\n1zaGEyLW5pc3RwNTIxAAAACG5pc3RwNTIxAAAAhQQA6zgG1vHujjrCagonqdAohU76Vk1p\nxFbQg9cP79qORmU61AaWgF34vl4ZYe7TIVxlE+7cGDwGpVldAZANsfDKuMYAERIXnA0XYg\nrTKIzdzYqrDVqK1cA9EstRNRFUn3xqKLP7yYBgSfntCNEKziZDPxAMNGr9mnxCpEWnsnN4\nH1Hua30AAAEYHuFx2B7hcdgAAAATZWNkc2Etc2hhMi1uaXN0cDUyMQAAAAhuaXN0cDUyMQ\nAAAIUEAOs4Btbx7o46wmoKJ6nQKIVO+lZNacRW0IPXD+/ajkZlOtQGloBd+L5eGWHu0yFc\nZRPu3Bg8BqVZXQGQDbHwyrjGABESF5wNF2IK0yiM3c2Kqw1aitXAPRLLUTURVJ98aiiz+8\nmAYEn57QjRCs4mQz8QDDRq/Zp8QqRFp7JzeB9R7mt9AAAAQQftU8WU2CCqtVvTp6Nc5GBd\nDVB34c0DszsSU9HWuURDJdJDZ6wYm9bSnJwgyKilBsNets+sDHzpjSCwUcCT9csOAAAAGW\nNocmlzdGlhbmRyZWllckBjZHJlaWVybmIBAg==\n-----END OPENSSH PRIVATE KEY-----\n"
    SCRUMLR_PRIVATE_KEY: "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAArAAAABNlY2RzYS\n1zaGEyLW5pc3RwNTIxAAAACG5pc3RwNTIxAAAAhQQA6zgG1vHujjrCagonqdAohU76Vk1p\nxFbQg9cP79qORmU61AaWgF34vl4ZYe7TIVxlE+7cGDwGpVldAZANsfDKuMYAERIXnA0XYg\nrTKIzdzYqrDVqK1cA9EstRNRFUn3xqKLP7yYBgSfntCNEKziZDPxAMNGr9mnxCpEWnsnN4\nH1Hua30AAAEYHuFx2B7hcdgAAAATZWNkc2Etc2hhMi1uaXN0cDUyMQAAAAhuaXN0cDUyMQ\nAAAIUEAOs4Btbx7o46wmoKJ6nQKIVO+lZNacRW0IPXD+/ajkZlOtQGloBd+L5eGWHu0yFc\nZRPu3Bg8BqVZXQGQDbHwyrjGABESF5wNF2IK0yiM3c2Kqw1aitXAPRLLUTURVJ98aiiz+8\nmAYEn57QjRCs4mQz8QDDRq/Zp8QqRFp7JzeB9R7mt9AAAAQQftU8WU2CCqtVvTp6Nc5GBd\nDVB34c0DszsSU9HWuURDJdJDZ6wYm9bSnJwgyKilBsNets+sDHzpjSCwUcCT9csOAAAAGW\nNocmlzdGlhbmRyZWllckBjZHJlaWVybmIBAg==\n-----END OPENSSH PRIVATE KEY-----\n"
    SCRUMLR_SERVER_PORT: "8080"
    SCRUMLR_SERVER_NATS_URL: nats://scrumlr-nats:4222
    SCRUMLR_SERVER_DATABASE_URL: postgres://scrumlr:scrumlr@scrumlr-postgresql:5432/scrumlr?sslmode=disable
    #SCRUMLR_AUTH_CALLBACK_HOST: 
    #SCRUMLR_FEEDBACK_WEBHOOK_URL:
    #SCRUMLR_CONFIG_PATH: 
  frontend:
    SCRUMLR_LISTEN_PORT: 8080
    SCRUMLR_SERVER_URL: "https://scrumlr.beta.tibeer.de/api"
    SCRUMLR_SHOW_LEGAL_DOCUMENTS: "true"
    #SCRUMLR_WEBSOCKET_URL: "ws://api.scrumlr.beta.tibeer.de"
    #SCRUMLR_ANALYTICS_DATA_DOMAIN: 
    #SCRUMLR_ANALYTICS_SRC: 

nats:
  enabled: true

postgresql:
  enabled: true
  image:
    tag: latest
  global:
    postgresql:
      auth:
        postgresPassword: scrumlr
        username: scrumlr
        password: scrumlr
        database: scrumlr
  primary:
    resources: {}
    persistence:
      enabled: true
      size: 1Gi
